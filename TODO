Goals:
- explore the relationships among RGB, HSL, HSV
- discover new colors
  - broaden one's perspective with new color bands
  - generate colors randomly
- select colors precisely
- manage palettes
  - store color alternatives in a group
  - automatically generate model layouts from palettes
- make a configurable color picker
  - color controls: RGB mixers, RGB grid, HS[LV] wheels
    - mixer: circular or linear
    - grid: associated with one mixer or three
    - wheel: HSV or HSL; circle or hexagon; circular or linear [LV] control
  - lay out the controls as you wish: position, size
  - allow the whole layout to be resizable in the app
  - add a help layer and tool tips
- the final result should be a pluggable component
  - plug it into any context where the user picks a color
- make a separate palette manager, also configurable and pluggable
- finally, make a sketchpad that uses the color picker and palette manager
  - use the palette manager to assign colors to sketching tools
  - use the color picker to add or modify palette colors

to do right now:
- hexagon
  + fix bug: negative RGB values
  + convert RGB to HSV
  + fix bug: high saturation near center of hexagon
  + speed up hexagon painting
  + mark the slider
  + when RGB changes, update slider and hexagon
  + change HSV update action from hover to drag
  + paint hexagons in advance
  + update hexagon backdrop when value changes
  - make value slider click-and-draggable
  - change to HSL
  - change to circle
  - make a mixer object that support HSL/HSV, circle/hexagon
- text controls
  - RGB text box
  - HSV text box

swatch generator
- make color samples derived from the currently selected color

RGB picker
+ improve layout
  + move grid to top row
  + enlarge rings to match grid
+ improve grid
  + add colored axes
  + mark grid 
  + clickable grid
  + draggable grid
+ make everything unselectable
- improve drawing performance
  + paint off-screen?
  + paint the grid with linear gradients?
  - time the paint functions
  - request animation frames?
  - try to speed up rgbToCss()?
  - paint discs to hidden canvases?
  - reduce sampling rate while dragging?
  - make image data in memory? https://goo.gl/YSdzh
- improve ring
  + draggable sector
  + extend sector outside band using hole color
  - micro-adjust buttons near sector
- refactor layout calculations

next steps
- test on mobile
- implement HSL and HSV
- figure out layout parameters
- implement auto-layout
- define API
- move on to color manager

layout
- calculate automatically based on canvas dimensions
  - set holeRadius once
- size canvas to screen

color rings
+ 256 notches around the perimeter
+ drag to change value
- plus/minus buttons in the hole

other mixing methods
+ show a mixing band around each basic ring
  + update all bands
  - overlap inside
  - smooth outside
  - show sector in band
+ click to fix one color and show grid of the two others
- figure out what else would be useful
  - HSV? HSL? other color models?
  - complementary colors?

mixed color
- show the mixed color
- make new ball
- animate new ball

palette management
- rearrange colors
- group alternatives around a color
- group colors into a palette
- generate a model layout for a palette

